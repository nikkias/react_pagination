{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","countItemsPage","currentPage","setCurrentPage","countPage","Math","ceil","length","isCurrentPageDisabled","className","cn","disabled","href","onClick","moveToPreviousPage","Array","map","_","i","active","moveToNextPage","item","index","from","to","numbers","n","push","getNumbers","App","useState","countVisibleItems","setCountVisibleItems","activePage","setActivePage","itemsStart","itemsFinish","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2NA6BaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,EAAYC,KAAKC,KAAKN,EAAMO,OAASN,GACrCO,EAAwBN,IAAgBE,EAE9C,OACE,qCACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBT,IAA3C,SACE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,kBArCM,SACzBX,EACAC,GAIAA,EAFgBD,EAAc,GAAK,EAAI,EAAIA,EAAc,GAiChCY,CAAmBZ,EAAaC,IALjD,oBAUD,YAAIY,MAAMX,IAAYY,KAAI,SAACC,EAAGC,GAAJ,OACzB,oBACET,UAAWC,IAAG,YAAa,CAAES,OAAQD,EAAI,IAAMhB,IADjD,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMM,EAAI,GACdL,QAAS,kBAAMV,EAAee,EAAI,IAJpC,SAMGA,EAAI,KAVT,WAEWA,EAAI,OAYjB,oBAAIT,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IAA3C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QACE,kBAvDS,SACrBX,EACAE,EACAD,GAIAA,EAFgBD,EAAc,GAAKE,EAAYA,EAAYF,EAAc,GAkDvDkB,CAAelB,EAAaE,EAAWD,IANjD,uBAcJ,6BACGH,EAAMgB,KAAI,SAACK,EAAMC,GAAP,OACRpB,EAAc,GAAKD,EAAiBqB,EAAQ,GAC1CpB,EAAcD,GAAkBqB,EAAQ,GACzC,oBAAI,UAAQ,OAAZ,SACGD,GADqBA,YC7E9BrB,ECTC,SAAoBuB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDEKG,CAHY,EACD,IAGtBZ,KAAI,SAAAU,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAkDC,mBAAS,GAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAaJ,EAAoBE,EAAaF,EAV5B,EAalBK,EAAcL,EAAoBE,EAZjB,MAcnBF,EAAoBE,EAOxB,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBAEYwB,EAFZ,mBAEiCE,EAFjC,cAEiDC,EAFjD,eAzBmB,GAyBnB,OAMA,sBAAK3B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOP,EACPQ,SAtBkB,SAACC,GAC3BR,GAAsBQ,EAAMC,OAAOH,OACnCJ,EAAc,IAeR,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,eAAgB8B,EAChB7B,YAAa+B,EACb9B,eAAgB+B,GACXlC,EAAMO,YE7DnBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dc99c183.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  items: string[];\n  countItemsPage: number;\n  currentPage: number;\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst moveToPreviousPage = (\n  currentPage: number,\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>,\n) => {\n  const newPage = currentPage - 1 <= 0 ? 1 : currentPage - 1;\n\n  setCurrentPage(newPage);\n};\n\nconst moveToNextPage = (\n  currentPage: number,\n  countPage: number,\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>,\n) => {\n  const newPage = currentPage + 1 >= countPage ? countPage : currentPage + 1;\n\n  setCurrentPage(newPage);\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  countItemsPage,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const countPage = Math.ceil(items.length / countItemsPage);\n  const isCurrentPageDisabled = currentPage === countPage;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => moveToPreviousPage(currentPage, setCurrentPage)}\n          >\n            «\n          </a>\n        </li>\n        {[...Array(countPage)].map((_, i) => (\n          <li\n            className={cn('page-item', { active: i + 1 === currentPage })}\n            key={`#${i + 1}`}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${i + 1}`}\n              onClick={() => setCurrentPage(i + 1)}\n            >\n              {i + 1}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item', { disabled: isCurrentPageDisabled })}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isCurrentPageDisabled}\n            onClick={\n              () => moveToNextPage(currentPage, countPage, setCurrentPage)\n            }\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {items.map((item, index) => (\n          (currentPage - 1) * countItemsPage < index + 1\n          && currentPage * countItemsPage >= index + 1 && (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          )\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst FIRST_ITEM_NUMBER = 1;\nconst LAST_ITEM_NUMBER = 42;\n\nconst items = getNumbers(FIRST_ITEM_NUMBER, LAST_ITEM_NUMBER)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [countVisibleItems, setCountVisibleItems] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n\n  const itemsStart = countVisibleItems * activePage - countVisibleItems\n    + FIRST_ITEM_NUMBER;\n\n  const itemsFinish = countVisibleItems * activePage > LAST_ITEM_NUMBER\n    ? LAST_ITEM_NUMBER\n    : countVisibleItems * activePage;\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCountVisibleItems(+event.target.value);\n    setActivePage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${activePage} (items ${itemsStart} - ${itemsFinish} of ${LAST_ITEM_NUMBER})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countVisibleItems}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        countItemsPage={countVisibleItems}\n        currentPage={activePage}\n        setCurrentPage={setActivePage}\n        key={items.length}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}